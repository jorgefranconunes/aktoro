/**************************************************************************
 *
 * Copyright (c) 2017 Aktoro project contributors.
 *
 * Unit tests configuration.
 *
 * Example of running one single test from the command line:
 *
 *    gw test --tests \*.ActorRefImplTest
 *
 **************************************************************************/

import static com.varmateo.gradle.Utils.enableTaskOnlyIfSelected


/**
 * @param testClassPattern Glob pattern of class file names containing
 * test suites.
 */
def buildTestTaskCommonConfiguration(final String testClassPattern) {

    return {
        include testClassPattern

        testLogging {
            events "standard_out", "standard_error"
            exceptionFormat "full"
            showExceptions true
            showCauses true
            showStackTraces true
        }

        afterSuite this.&printTestResult
    }
}


/**
 * Utility function for displaying test results.
 */
def printTestResult(descriptor , result) {

    if ( (descriptor.parent!=null) && (descriptor.className!=null) ) {
        def duration = result.endTime - result.startTime
        def total = result.testCount
        def successes = result.successfulTestCount
        def failures = result.failedTestCount
        def skiped = result.skippedTestCount

        if ( total > 0 ) {
            println "${result.resultType} ${failures}/${successes}/${total} ${duration} ms : ${descriptor.name}"
        } else {
            // No tests were executed in this test suite, so we say
            // nothing.
        }
    }
}


/**
 * Configuration for "test" task.
 */
test buildTestTaskCommonConfiguration("**/*Test.class")


/**
 * Configuration for "integrationTest" task.
 *
 * This task is only enabled when project property
 * "${rootProject.name}.integrationTests" is defined and is different
 * from "no".
 */
task integrationTest(type: Test) {
    description "Runs the integration tests."
}

integrationTest buildTestTaskCommonConfiguration("**/*IT.class")

enableTaskOnlyIfSelected integrationTest

integrationTest.mustRunAfter test
check.dependsOn integrationTest
